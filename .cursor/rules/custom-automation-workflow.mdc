---
description:
globs:
alwaysApply: false
---
# Custom Automation Workflow

## Auto-Testing Triggers

When any Python, Rust, or JavaScript file is modified:
1. **Suggest running tests** for the affected component
2. **Check for missing test coverage** in new functions
3. **Remind about documentation updates** if public APIs changed

## Git Integration Automation

When committing code:
1. **Auto-generate commit messages** based on file changes
2. **Create TODO items** for any `TODO:` comments found in code
3. **Update project status** in MCP Todo Server

## Code Quality Automation

When opening files:
1. **Run linters** automatically in background
2. **Suggest refactoring** for complex functions (>50 lines)
3. **Highlight potential security issues**

## Project-Specific Triggers

### For Rust Projects
```rust
// When cargo.toml is modified:
// - Suggest running `cargo update`
// - Check for new dependencies security
// - Update documentation if public API changed
```

### For Python Projects
```python
# When requirements.txt changes:
# - Suggest pip install -r requirements.txt
# - Check for vulnerable packages
# - Update virtual environment
```

### For Node.js Projects
```javascript
// When package.json changes:
// - Suggest npm install
// - Check for outdated packages
// - Update lockfile
```

## MCP Integration Automation

Automatically create todos for:
- Failed test runs
- Security vulnerabilities found
- Documentation gaps
- Code review feedback

## Custom Shortcuts

Define keyboard shortcuts for common automation tasks:
- `Cmd+Shift+T`: Run tests for current file
- `Cmd+Shift+D`: Generate documentation
- `Cmd+Shift+R`: Refactor selected code
- `Cmd+Shift+A`: Analyze code quality

## AI Assistant Behaviors

When AI suggests code changes:
1. **Always run tests** before accepting
2. **Check impact** on related components
3. **Update documentation** automatically
4. **Create TODO** if follow-up work needed

## Environment-Specific Automation

### Development Environment
- Auto-reload services on code changes
- Keep test databases in sync
- Monitor resource usage

### Production Environment
- Create deployment todos
- Require security reviews
- Backup before changes

Remember: These automations should enhance your "MANIACAL AI AGENT DIRECTIVES" workflow!
