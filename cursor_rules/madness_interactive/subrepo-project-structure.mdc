---
description: explains the layout of the Todomill_projetorium subrepo
globs:
alwaysApply: false
---
# Todomill_projectorium Project Structure

## Overview
This is a Node-RED project functioning as a dashboard for a todo list tool that runs on the same EC2 instance as Node-RED. It operates as a sub-repository of the larger Omnispindle repository. Omnispindle is a Python MCP server allowing AI agents to interact with the MongoDB todo list.

## Directory Structure

- **ExportedNodeRedTabs/**: Contains exported Node-RED tabs as JSON files
  - `todo-dash-masterfile.json`: Main flow definition
  - `UI-Template-subsection.json`: UI template nodes
  - Other workflow JSON files

- **JavascriptFromFunctionNode/**: JavaScript code for function nodes
  - `EditActions.js`: Routes edit actions
  - `update-multi.js`: Handles database updates
  - Various handlers for different todo operations

- **HtmlFromTemplateNode/**: HTML templates for dashboard UI
  - `TodoEdit.html`: Todo editing interface
  - `TodoList.html`: List of todos
  - Other UI components

## Development Workflow

1. **Source of Truth**: The `.json` files in ExportedNodeRedTabs are the source of truth, containing the complete flow definitions.

2. **Working with Code**:
   - `.js` files in JavascriptFromFunctionNode and `.html` files in HtmlFromTemplateNode are extracted from the JSON for easier editing
   - Edit these files, then copy them back to the Node-RED editor
   - Export updated flows to refresh the JSON files

3. **Best Practices**:
   - Only edit the `.json` files directly to modify node connections
   - Add comments to `.json` files to document the corresponding `.js` and `.html` files
   - Make functional changes in the extracted JS/HTML files for better editing experience

## Dashboard Structure

1. **First Tab**: Main dashboard with project sidebar
2. **Second Tab**: Item Editor for todos
3. **Third Tab**: Smart suggestions for todo list optimization
4. **Control Panel**: Below these tabs, provides project filtering and refresh options

## Technical Integration

- The dashboard communicates with MongoDB through the Node-RED mongodb4 nodes
- Message patterns use `todo/action/*` topics to trigger operations
- Response handling returns data via `todo/dashboard/*` topics
- All code is written for Node-RED's JavaScript function nodes and HTML template nodes
